{"ast":null,"code":"import _classCallCheck from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/treytamaki/Desktop/cse441/src/components/ListItem.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { completeToDo, fetchAudios } from '../actions';\n\nvar ListItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListItem, _Component);\n\n  function ListItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.completeClick = function (completeTodoId) {\n      var completeToDo = _this.props.completeToDo;\n      completeToDo(completeTodoId);\n    };\n\n    return _this;\n  }\n\n  _createClass(ListItem, [{\n    key: \"render\",\n    // componentWillMount() {\n    //   this.props.fetchAudios();\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"STate\", this.state);\n      console.log(\"Props\", this.props);\n      var _this$props = this.props,\n          todoId = _this$props.todoId,\n          todo = _this$props.todo;\n      return React.createElement(\"div\", {\n        key: \"toDoName\",\n        className: \"col s10 offset-s1 to-do-list-item black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, todo.title, React.createElement(\"span\", {\n        onClick: function onClick() {\n          return _this2.completeClick(todoId);\n        },\n        className: \"complete-todo-item waves-effect waves-light blue lighten-5 blue-text text-darken-4 btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"large material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Redo\"))), React.createElement(\"img\", {\n        src: todo.photoUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Notes: \", todo.comments));\n    }\n  }]);\n\n  return ListItem;\n}(Component); // const mapStateToProps = ({love}) => {\n//   return {\n//     love\n//   }\n// }\n\n\nexport default connect(null, {\n  completeToDo: completeToDo\n})(ListItem);","map":{"version":3,"sources":["/Users/treytamaki/Desktop/cse441/src/components/ListItem.js"],"names":["React","Component","connect","completeToDo","fetchAudios","ListItem","completeClick","completeTodoId","props","console","log","state","todoId","todo","title","photoUrl","comments"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,YAAxC;;IAGMC,Q;;;;;;;;;;;;;;;;;;UACJC,a,GAAgB,UAAAC,cAAc,EAAI;AAAA,UACzBJ,YADyB,GACT,MAAKK,KADI,CACzBL,YADyB;AAEhCA,MAAAA,YAAY,CAACI,cAAD,CAAZ;AACD,K;;;;;;;AAED;AACA;AACA;6BAES;AAAA;;AACPE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKC,KAA1B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKF,KAA1B;AAFO,wBAIe,KAAKA,KAJpB;AAAA,UAIDI,MAJC,eAIDA,MAJC;AAAA,UAIOC,IAJP,eAIOA,IAJP;AAKP,aACE;AAAK,QAAA,GAAG,EAAC,UAAT;AAAoB,QAAA,SAAS,EAAC,yCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,CAACC,KADR,EAEE;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACR,aAAL,CAAmBM,MAAnB,CAAN;AAAA,SADX;AAEE,QAAA,SAAS,EAAC,wFAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CAFF,CADF,EAUE;AAAK,QAAA,GAAG,EAAEC,IAAI,CAACE,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACUF,IAAI,CAACG,QADf,CAXF,CADF;AAiBD;;;;EAhCoBf,S,GAmCvB;AACA;AACA;AACA;AACA;;;AAEA,eAAeC,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA,YAAY,EAAZA;AAAD,CAAP,CAAP,CAA8BE,QAA9B,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {completeToDo, fetchAudios} from '../actions';\n\n\nclass ListItem extends Component {\n  completeClick = completeTodoId => {\n    const {completeToDo} = this.props;\n    completeToDo(completeTodoId);\n  };\n\n  // componentWillMount() {\n  //   this.props.fetchAudios();\n  // }\n\n  render() {\n    console.log(\"STate\", this.state);\n    console.log(\"Props\", this.props);\n    \n    const{todoId, todo} = this.props;\n    return (\n      <div key=\"toDoName\" className=\"col s10 offset-s1 to-do-list-item black\">\n        <h4>\n          {todo.title}\n          <span \n            onClick={() => this.completeClick(todoId)}\n            className=\"complete-todo-item waves-effect waves-light blue lighten-5 blue-text text-darken-4 btn\"\n          >\n            <i className=\"large material-icons\">Redo</i>\n          </span>\n        </h4>\n        <img src={todo.photoUrl}/>\n        <h6>\n          Notes: {todo.comments}\n        </h6>\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = ({love}) => {\n//   return {\n//     love\n//   }\n// }\n\nexport default connect(null, {completeToDo})(ListItem);"]},"metadata":{},"sourceType":"module"}