{"ast":null,"code":"import _classCallCheck from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/treytamaki/Desktop/cse441/src/components/FeedbackItem.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addFeedback } from '../actions';\nimport { storage } from '../config/firebase';\nimport MicRecorder from 'mic-recorder-to-mp3';\nvar Mp3Recorder = new MicRecorder({\n  bitRate: 128\n});\n\nvar FeedbackItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FeedbackItem, _Component);\n\n  function FeedbackItem(props) {\n    var _this;\n\n    _classCallCheck(this, FeedbackItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FeedbackItem).call(this, props));\n\n    _this.start = function () {// if (this.state.isBlocked) {\n      //   console.log('Permission Denied');\n      // } else {\n      //   Mp3Recorder\n      //     .start()\n      //     .then(() => {\n      //       this.setState({ isRecording: true });\n      //     }).catch((e) => console.error(e));\n      // }\n    };\n\n    _this.stop = function () {\n      var addFeedback = _this.props.addFeedback; // Mp3Recorder\n      //   .stop()\n      //   .getMp3()\n      //   .then(([buffer, blob]) => {\n      //     const blobURL = URL.createObjectURL(blob)\n      //     this.setState({ blobURL, isRecording: false });\n      //     const audioFileName = this.props.username + \"-\" + this.props.todo.title + \"-\" + this.props.todo.className + \"-\" + this.props.todo.timestamp;\n      //     // console.log(\"STATE\", this.state)        \n      //     // console.log(\"PROPS\", this.props)\n      //     // console.log(\"blob\", blob)\n      //     // console.log(\"audioFileName\", audioFileName)\n      //     const uploadTask = storage.ref(`audios/${audioFileName}`).put(blob);\n      //     uploadTask.on('state_changed', \n      //       (snapshot) => {\n      //         const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n      //         this.setState({progress});\n      //       }, \n      //       (error) => {\n      //         console.log(error);\n      //       }, \n      //     () => {\n      //       storage.ref('audios').child(audioFileName).getDownloadURL().then(url => {\n      //         console.log(this.state);\n      //         const time = new Date() + \"\";\n      //         addFeedback({\n      //           instructor: this.props.username, \n      //           student: this.props.todo.title,\n      //           className: this.props.todo.className, \n      //           audioUrl: url, \n      //           timestamp: time,\n      //         });\n      //         this.setState({\n      //           isRecording: false,\n      //           blobURL: '',\n      //           isBlocked: false\n      //         });\n      //       })  \n      //     });\n      //   }).catch((e) => console.log(e));\n    };\n\n    _this.completeClick = function (completeTodoId) {// const {completeToDo} = this.props;\n      // completeToDo(completeTodoId);\n    };\n\n    _this.state = {\n      isRecording: false,\n      blobURL: '',\n      isBlocked: false\n    };\n    return _this;\n  }\n\n  _createClass(FeedbackItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// navigator.getUserMedia({ audio: true },\n      //   () => {\n      //     console.log('Permission Granted');\n      //     this.setState({ isBlocked: false });\n      //   },\n      //   () => {\n      //     console.log('Permission Denied');\n      //     this.setState({ isBlocked: true })\n      //   },\n      // );\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          todoId = _this$props.todoId,\n          todo = _this$props.todo;\n      return React.createElement(\"div\", {\n        key: \"toDoName\",\n        className: \"col s10 offset-s1 to-do-list-item black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, todo.title, React.createElement(\"span\", {\n        onClick: function onClick() {\n          return _this2.completeClick(todoId);\n        },\n        className: \"complete-todo-item waves-effect waves-light blue lighten-5 blue-text text-darken-4 btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"large material-icons\",\n        onClick: this.start,\n        disabled: this.state.isRecording,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Record\"), React.createElement(\"button\", {\n        className: \"large material-icons\",\n        onClick: this.stop,\n        disabled: !this.state.isRecording,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Stop\"))), React.createElement(\"img\", {\n        src: todo.photoUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Notes: \", todo.comments));\n    }\n  }]);\n\n  return FeedbackItem;\n}(Component);\n\nexport default connect(null, {\n  addFeedback: addFeedback\n})(FeedbackItem);","map":{"version":3,"sources":["/Users/treytamaki/Desktop/cse441/src/components/FeedbackItem.js"],"names":["React","Component","connect","addFeedback","storage","MicRecorder","Mp3Recorder","bitRate","FeedbackItem","props","start","stop","completeClick","completeTodoId","state","isRecording","blobURL","isBlocked","todoId","todo","title","photoUrl","comments"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,YAA1B;AAEA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,IAAMC,WAAW,GAAG,IAAID,WAAJ,CAAgB;AAAEE,EAAAA,OAAO,EAAE;AAAX,CAAhB,CAApB;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;;AADiB,UAyBnBC,KAzBmB,GAyBX,YAAM,CACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAnCkB;;AAAA,UAqCnBC,IArCmB,GAqCZ,YAAM;AAAA,UACJR,WADI,GACW,MAAKM,KADhB,CACJN,WADI,EAIX;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,KAtFkB;;AAAA,UAwFnBS,aAxFmB,GAwFH,UAAAC,cAAc,EAAI,CAChC;AACA;AACD,KA3FkB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,KADF;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAFiB;AAOlB;;;;wCAImB,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;6BAuEQ;AAAA;;AAAA,wBACe,KAAKR,KADpB;AAAA,UACDS,MADC,eACDA,MADC;AAAA,UACOC,IADP,eACOA,IADP;AAEP,aACE;AAAK,QAAA,GAAG,EAAC,UAAT;AAAoB,QAAA,SAAS,EAAC,yCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,CAACC,KADR,EAEE;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACR,aAAL,CAAmBM,MAAnB,CAAN;AAAA,SADX;AAEE,QAAA,SAAS,EAAC,wFAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAKR,KAAvD;AAA8D,QAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWC,WAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAKJ,IAAvD;AAA6D,QAAA,QAAQ,EAAE,CAAC,KAAKG,KAAL,CAAWC,WAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CAFF,CADF,EAiBE;AAAK,QAAA,GAAG,EAAEI,IAAI,CAACE,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACUF,IAAI,CAACG,QADf,CAlBF,CADF;AAwBD;;;;EAxHwBrB,S;;AA6H3B,eAAeC,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA,WAAW,EAAXA;AAAD,CAAP,CAAP,CAA6BK,YAA7B,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {addFeedback} from '../actions';\n\nimport { storage } from '../config/firebase';\n\nimport MicRecorder from 'mic-recorder-to-mp3';\n\nconst Mp3Recorder = new MicRecorder({ bitRate: 128 });\n\nclass FeedbackItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isRecording: false,\n      blobURL: '',\n      isBlocked: false,\n    };\n  }\n\n  \n\n  componentDidMount() {\n    // navigator.getUserMedia({ audio: true },\n    //   () => {\n    //     console.log('Permission Granted');\n    //     this.setState({ isBlocked: false });\n    //   },\n    //   () => {\n    //     console.log('Permission Denied');\n    //     this.setState({ isBlocked: true })\n    //   },\n    // );\n  }\n\n\n  start = () => {\n    // if (this.state.isBlocked) {\n    //   console.log('Permission Denied');\n    // } else {\n    //   Mp3Recorder\n    //     .start()\n    //     .then(() => {\n    //       this.setState({ isRecording: true });\n    //     }).catch((e) => console.error(e));\n    // }\n  };\n\n  stop = () => {\n    const {addFeedback} = this.props;    \n    \n\n    // Mp3Recorder\n    //   .stop()\n    //   .getMp3()\n    //   .then(([buffer, blob]) => {\n    //     const blobURL = URL.createObjectURL(blob)\n    //     this.setState({ blobURL, isRecording: false });\n        \n    //     const audioFileName = this.props.username + \"-\" + this.props.todo.title + \"-\" + this.props.todo.className + \"-\" + this.props.todo.timestamp;\n\n    //     // console.log(\"STATE\", this.state)        \n    //     // console.log(\"PROPS\", this.props)\n    //     // console.log(\"blob\", blob)\n    //     // console.log(\"audioFileName\", audioFileName)\n\n    //     const uploadTask = storage.ref(`audios/${audioFileName}`).put(blob);\n    //     uploadTask.on('state_changed', \n    //       (snapshot) => {\n    //         const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n    //         this.setState({progress});\n    //       }, \n    //       (error) => {\n    //         console.log(error);\n    //       }, \n    //     () => {\n    //       storage.ref('audios').child(audioFileName).getDownloadURL().then(url => {\n    //         console.log(this.state);\n    //         const time = new Date() + \"\";\n            \n    //         addFeedback({\n    //           instructor: this.props.username, \n    //           student: this.props.todo.title,\n    //           className: this.props.todo.className, \n    //           audioUrl: url, \n    //           timestamp: time,\n    //         });\n\n    //         this.setState({\n    //           isRecording: false,\n    //           blobURL: '',\n    //           isBlocked: false\n    //         });\n    //       })  \n    //     });\n\n    //   }).catch((e) => console.log(e));\n  };\n\n  completeClick = completeTodoId => {\n    // const {completeToDo} = this.props;\n    // completeToDo(completeTodoId);\n  };\n\n  render() {\n    const{todoId, todo} = this.props;\n    return (\n      <div key=\"toDoName\" className=\"col s10 offset-s1 to-do-list-item black\">\n        <h4>\n          {todo.title}\n          <span \n            onClick={() => this.completeClick(todoId)}\n            className=\"complete-todo-item waves-effect waves-light blue lighten-5 blue-text text-darken-4 btn\"\n          >\n\n            <button className=\"large material-icons\" onClick={this.start} disabled={this.state.isRecording}>Record</button>\n            <button className=\"large material-icons\" onClick={this.stop} disabled={!this.state.isRecording}>Stop</button>\n\n            {/* /* <RecordButton isRecording={this.state.isRecording}/>  */}\n          </span>\n        </h4>\n\n        {/* <audio src={this.state.blobURL} controls=\"controls\" /> */}\n\n        <img src={todo.photoUrl}/>\n        <h6>\n          Notes: {todo.comments}\n        </h6>\n      </div>\n    );\n  }\n}\n\n\n\nexport default connect(null, {addFeedback})(FeedbackItem);"]},"metadata":{},"sourceType":"module"}