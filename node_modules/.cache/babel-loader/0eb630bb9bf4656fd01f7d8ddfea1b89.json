{"ast":null,"code":"import _regeneratorRuntime from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FETCH_TODOS } from './types';\nimport * as firebase from 'firebase';\nimport { FirebaseConfig } from '../config/keys';\nfirebase.initializeApp(FirebaseConfig);\nvar databaseRef = firebase.database().ref();\nvar todosRef = databaseRef.child(\"todos\");\nvar audiosRef = databaseRef.child(\"audios\");\nvar startsRef = databaseRef.child(\"starts\");\nexport var addStart = function addStart(newToDo) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                startsRef.push().set(newToDo);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStarts = function fetchStarts() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                startsRef.on(\"value\", function (snapshot) {\n                  dispatch({\n                    type: FETCH_TODOS,\n                    payload: snapshot.val()\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addToDo = function addToDo(newToDo) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                todosRef.push().set(newToDo);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addFeedback = function addFeedback(newToDo) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                audiosRef.push().set(newToDo);\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var completeToDo = function completeToDo(completeToDoId) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                todosRef.child(completeToDoId).remove();\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchToDos = function fetchToDos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                todosRef.on(\"value\", function (snapshot) {\n                  dispatch({\n                    type: FETCH_TODOS,\n                    payload: snapshot.val()\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchAudios = function fetchAudios() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                audiosRef.on(\"value\", function (snapshot) {\n                  dispatch({\n                    type: FETCH_TODOS,\n                    payload: snapshot.val()\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function (_x7) {\n        return _ref7.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/treytamaki/Desktop/cse441/src/actions/index.js"],"names":["FETCH_TODOS","firebase","FirebaseConfig","initializeApp","databaseRef","database","ref","todosRef","child","audiosRef","startsRef","addStart","newToDo","dispatch","push","set","fetchStarts","on","snapshot","type","payload","val","addToDo","addFeedback","completeToDo","completeToDoId","remove","fetchToDos","fetchAudios"],"mappings":"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","sourcesContent":["import {FETCH_TODOS} from './types';\nimport * as firebase from 'firebase'\n\nimport {FirebaseConfig} from '../config/keys';\nfirebase.initializeApp(FirebaseConfig)\n\n\nconst databaseRef = firebase.database().ref();\n\nconst todosRef = databaseRef.child(\"todos\")\nconst audiosRef = databaseRef.child(\"audios\")\nconst startsRef = databaseRef.child(\"starts\")\n\nexport const addStart = newToDo => async dispatch => {\n  startsRef.push().set(newToDo);\n};\n\nexport const fetchStarts = () => async dispatch => {\n  startsRef.on(\"value\", snapshot => {\n    dispatch({\n      type: FETCH_TODOS,\n      payload: snapshot.val()\n    });\n  });\n};\n\nexport const addToDo = newToDo => async dispatch => {\n  todosRef.push().set(newToDo);\n};\n\nexport const addFeedback = newToDo => async dispatch => {\n  audiosRef.push().set(newToDo);\n};\n\nexport const completeToDo = completeToDoId => async dispatch => {\n  todosRef.child(completeToDoId).remove();\n};\n\n\n\nexport const fetchToDos = () => async dispatch => {\n  todosRef.on(\"value\", snapshot => {\n    dispatch({\n      type: FETCH_TODOS,\n      payload: snapshot.val()\n    });\n  });\n};\n\nexport const fetchAudios = () => async dispatch => {\n  audiosRef.on(\"value\", snapshot => {\n    dispatch({\n      type: FETCH_TODOS,\n      payload: snapshot.val()\n    });\n  });\n};"]},"metadata":{},"sourceType":"module"}