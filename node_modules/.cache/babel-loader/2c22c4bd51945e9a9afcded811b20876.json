{"ast":null,"code":"import _classCallCheck from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/treytamaki/Desktop/cse441/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/treytamaki/Desktop/cse441/src/components/List.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport * as actions from '../actions';\nimport ListItem from './ListItem';\nimport FeedbackItem from './FeedbackItem';\nimport \"./style.css\";\nimport { storage } from '../config/firebase';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n\n    _this.inputChange = function (event) {\n      _this.setState({\n        formValue: event.target.value\n      });\n    };\n\n    _this.handleChangeImage = function (e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n\n        _this.setState({\n          imageTest: image\n        });\n      }\n    };\n\n    _this.formSubmit = function () {\n      // console.log(\"SUBMIT\", this.state)\n      var addToDo = _this.props.addToDo;\n      var formValue = _this.state.formValue;\n      var photo = _this.state.imageTest;\n      var uploadTask = storage.ref(\"images/\".concat(photo.name)).put(photo);\n      uploadTask.on('state_changed', function (snapshot) {\n        var progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n\n        _this.setState({\n          progress: progress\n        });\n      }, function (error) {\n        console.log(error);\n      }, function () {\n        storage.ref('images').child(photo.name).getDownloadURL().then(function (url) {\n          console.log(_this.state);\n          var time = new Date() + \"\";\n          addToDo({\n            title: _this.props.username,\n            className: _this.props.chosenClass,\n            photoUrl: url,\n            timestamp: time,\n            comments: formValue\n          });\n\n          _this.setState({\n            formValue: \"\",\n            imageTest: \"\",\n            showForm: false\n          });\n        });\n      });\n    };\n\n    _this.renderForm = function () {\n      var formValue = _this.state.formValue;\n      return React.createElement(\"div\", {\n        id: \"todo-add-form\",\n        className: \"col s10 offset-s1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: formValue,\n        onChange: _this.inputChange,\n        id: \"toDoNext\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        name: \"myImage\",\n        onChange: _this.handleChangeImage,\n        accept: \"image/*\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: _this.formSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Upload\"), React.createElement(\"label\", {\n        htmlFor: \"toDoNext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Comments\")));\n    };\n\n    _this.state = {\n      showForm: true,\n      formValue: \"\",\n      photoValue: null\n    };\n    _this.handleChange = _this.handleChangeImage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"renderToDo\",\n    value: function renderToDo() {\n      var _this2 = this;\n\n      console.log(\"RENDER TODO\", _);\n      var data = this.props.data;\n      var username = this.props.username;\n      var toDos = [];\n\n      _.forEach(data, function (value, key) {\n        var isInstructor = _this2.props.userType === \"instructor\";\n        var isStudentAndNamed = !isInstructor && value.title === _this2.props.username;\n        var classIsEqual = _this2.props.chosenClass === value.className;\n\n        if (isStudentAndNamed && classIsEqual) {\n          toDos.push(React.createElement(ListItem, {\n            key: key,\n            todoId: key,\n            todo: value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }));\n        } else if (isInstructor && classIsEqual) {\n          toDos.push(React.createElement(FeedbackItem, {\n            username: username,\n            key: key,\n            todoId: key,\n            todo: value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }));\n        }\n      });\n\n      if (!_.isEmpty(toDos)) {\n        return toDos;\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, this.renderForm(), React.createElement(\"div\", {\n          className: \"col s10 offset-s1 center-align\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"You have not submitted a photo yet\")));\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchToDos();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var showForm = this.state.showForm;\n      return React.createElement(\"div\", {\n        className: \"to-do-list-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.renderToDo()));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var data = _ref.data;\n  return {\n    data: data\n  };\n};\n\nexport default connect(mapStateToProps, actions)(List);","map":{"version":3,"sources":["/Users/treytamaki/Desktop/cse441/src/components/List.js"],"names":["React","Component","connect","_","actions","ListItem","FeedbackItem","storage","List","props","inputChange","event","setState","formValue","target","value","handleChangeImage","e","files","image","imageTest","formSubmit","addToDo","state","photo","uploadTask","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url","time","Date","title","username","className","chosenClass","photoUrl","timestamp","comments","showForm","renderForm","photoValue","handleChange","bind","data","toDos","forEach","key","isInstructor","userType","isStudentAndNamed","classIsEqual","push","isEmpty","fetchToDos","renderToDo","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport _ from 'lodash';\nimport * as actions from '../actions';\nimport ListItem from './ListItem';\nimport FeedbackItem from './FeedbackItem';\n\nimport \"./style.css\";\n\nimport { storage } from '../config/firebase';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForm: true,\n      formValue: \"\",\n      photoValue: null\n    };\n    this.handleChange = this.handleChangeImage.bind(this);\n  }\n\n  inputChange = event => {\n    this.setState({formValue: event.target.value});\n  };\n\n  handleChangeImage = e => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState({imageTest: image});\n    }\n  }\n\n  formSubmit = () => {\n    // console.log(\"SUBMIT\", this.state)\n    const {addToDo} = this.props;    \n\n    const {formValue} = this.state;\n    const photo = this.state.imageTest;\n\n    const uploadTask = storage.ref(`images/${photo.name}`).put(photo);\n    uploadTask.on('state_changed', \n      (snapshot) => {\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n        this.setState({progress});\n      }, \n      (error) => {\n        console.log(error);\n      }, \n    () => {\n      storage.ref('images').child(photo.name).getDownloadURL().then(url => {\n        console.log(this.state);\n        const time = new Date() + \"\";\n        \n        addToDo({\n          title: this.props.username, \n          className: this.props.chosenClass, \n          photoUrl: url, \n          timestamp: time,\n          comments: formValue\n        });\n        this.setState({formValue: \"\", imageTest: \"\", showForm: false});\n      })  \n    });\n  };\n\n  renderForm = () => {\n    const {formValue} = this.state;\n    return (\n      <div id=\"todo-add-form\" className=\"col s10 offset-s1\">\n        {/* <form onSubmit={this.formSubmit}> */}\n          <div className=\"input-field\">\n            <input value={formValue} onChange={this.inputChange} id=\"toDoNext\" type=\"text\"/>\n            <input type=\"file\" name=\"myImage\" onChange={this.handleChangeImage} accept=\"image/*\" />\n            <button onClick={this.formSubmit}>Upload</button>\n            <label htmlFor=\"toDoNext\">Comments</label>\n          </div>\n        {/* </form> */}\n      </div>\n    );\n  };\n\n  renderToDo() {\n    console.log(\"RENDER TODO\", _);\n    const {data} = this.props;\n\n    const username = this.props.username;\n\n    const toDos =[];\n\n    _.forEach(data, (value, key) => {\n      let isInstructor = this.props.userType === \"instructor\";\n      let isStudentAndNamed = !isInstructor && value.title === this.props.username;\n      let classIsEqual = this.props.chosenClass === value.className;\n\n      if ((isStudentAndNamed) && classIsEqual) {\n        toDos.push(<ListItem key={key} todoId={key} todo={value} />);\n      } else if (isInstructor && classIsEqual) {\n        toDos.push(<FeedbackItem username={username} key={key} todoId={key} todo={value} />);\n      }\n    });\n\n    if (!_.isEmpty(toDos)) {\n      return toDos;\n    } else  {\n      return (\n        <div>\n          {this.renderForm()}\n          <div className=\"col s10 offset-s1 center-align\">\n            <h4>You have not submitted a photo yet</h4>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  componentWillMount() {\n    this.props.fetchToDos();\n  }\n\n  render() {\n    console.log(this.props);\n    const {showForm} = this.state;\n    return (\n      <div className=\"to-do-list-container\">\n        <div className=\"row\">\n          {/* {this.renderForm()}  */}\n          {this.renderToDo()}\n        </div>\n\n        {/* <div className=\"fixed-action-btn\">\n          <button \n            onClick={() => this.setState({showForm: !showForm})}\n            className=\"btn-floating btn-large black darken-4\"\n          >\n          {showForm ? (\n            <i className=\"large material-icons\">-</i>\n          ) : (\n            <i className=\"large material-icons\">+</i>\n          )}\n          </button>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({data}) => {\n  return {\n    data\n  }\n}\n\nexport default connect(mapStateToProps, actions)(List);"]},"metadata":{},"sourceType":"module"}